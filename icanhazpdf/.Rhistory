library(jsonlite)
options(encoding <- "UTF-8")
options(Encoding <- "UTF-8")
library(jsonlite)
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
retweets <- tweets[which(!is.na(tweets$retweeted_status$id)),]
not_retweets <- tweets[!(tweets$id_str %in% retweets$id_str),]
quotes <- not_retweets[which(not_retweets$is_quote_status),]
not_retweets <- not_retweets[which(!(not_retweets$is_quote_status)),]
replys <- not_retweets[which(!(is.na(quotes$in_reply_to_status_id_str))),]
not_retweets <- not_retweets[which(is.na(not_retweets$in_reply_to_status_id_str)),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
tweets[which(grepl("_open_science_", tweets$source)),]$id
rm(encoding, envir = as.environment(".GlobalEnv"))
options(Encoding("UTF-8"))
options(encoding("UTF-8"))
options(encoding <- "UTF-8")
getOption("encoding")
options(encoding = "UTF-8")
getOption("encoding")
library(jsonlite)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
retweets <- tweets[which(!is.na(tweets$retweeted_status$id)),]
not_retweets <- tweets[!(tweets$id_str %in% retweets$id_str),]
quotes <- not_retweets[which(not_retweets$is_quote_status),]
not_retweets <- not_retweets[which(!(not_retweets$is_quote_status)),]
replys <- not_retweets[which(!(is.na(quotes$in_reply_to_status_id_str))),]
not_retweets <- not_retweets[which(is.na(not_retweets$in_reply_to_status_id_str)),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
tweets[which(grepl("_open_science_", tweets$source)),]$id
library(stringr)
str_extract(sources[1, 1], ">(.*?)</a>$")
str_extract(sources[1, 1], ">(.*?)</a>$")
library(magrittr)
str_extract(sources[1, 1], ">(.*?)</a>$") %>%     gsub(">", "", .) %>%     gsub("</a>", "", .)
str_extract(sources[1, 1], ">(.*?)</a>$") %>%     gsub(">", "", .) %>%     gsub("</a>", "", .)str_extract(sources[1, 1], ">(.*?)</a>$") %>%     gsub("</a>", "", .) %>%     gsub(">", "", .)
str_extract(sources[1, 1], ">(.*?)</a>$") %>%     gsub("</a>", "", .) %>%     gsub(">", "", .)
sources$Platform <- sources$Platform <- str_extract(sources$Var1, ">(.*?)</a>$") %>%     gsub("</a>", "", .) %>%     gsub(">", "", .)
sources$Var1 <- NULL
sources[order(-Freq),]
sources[order(-sources$Freq),]
sources <- sources[order(sources$Platform, -sources$Freq),]
sources <- sources[order(-sources$Freq, sources$Platform),]
sources <- sources[order(sources$Platform. -sources$Freq),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
sources$Platform <- str_extract(sources$Var1, ">(.*?)</a>$") %>%     gsub("</a>", "", .) %>%     gsub(">", "", .)
sources$Var1 <- NULL
sources <- sources[order(sources$Platform. -sources$Freq),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
sources$Platform <- str_extract(sources$Var1, ">(.*?)</a>$") %>%     gsub("</a>", "", .) %>%     gsub(">", "", .)
sources$Var1 <- NULL
sources <- sources[order(sources$Platform, -sources$Freq),]
sources <- sources[order(sources$Platform),]
sources <- sources[order(-sources$Freq),]
tweets[which(grepl("slidesearch.org", tweets$source)),]$id
tweets[which(grepl("Blackberry", tweets$source)),]$id
tweets[which(grepl("BlackVerry", tweets$source)),]$id
tweets[which(grepl("BlackBerry", tweets$source)),]$id
with(sources, sum(x[sources$Freq <= 10]))
sum(sources[sources$Freq <= 10])
sum(sources[sources$Freq <= 10]$Freq)
sources[sources$Freq <= 10]$Freq
sources[sources$Freq <= 10,]$Freq
sum(sources[sources$Freq <= 10,]$Freq)
sources.collapsed <- sources[sources$Freq >= 10,]
others.df <- data.frame(sum(sources[sources$Freq <= 10,]$Freq), "Others")
names(others.df) <- c("Freq", "Platform")
sources.collapsed <- rbind(sources[sources$Freq >= 10,], others.df)
ggplot2(sources.collapsed, aes(x = "", y = Freq, fill = group)) + geom_bar(width = 1, stat = "identity")
library(ggplot2)
ggplot2(sources.collapsed, aes(x = "", y = Freq, fill = group)) + geom_bar(width = 1, stat = "identity")
ggplot(sources.collapsed, aes(x = "", y = Freq, fill = group)) + geom_bar(width = 1, stat = "identity")
ggplot(sources.collapsed, aes(x = "", y = Freq, fill = Platform)) + geom_bar(width = 1, stat = "identity")
ggplot(sources.collapsed, aes(x = "", y = Freq, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%     gsub("</a>", "", .) %>%     gsub(">", "", .)
head(tweets$source)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
tweets$type
unique.tweets <- tweets[which(tweets$type == "tweet"),]
sources <- as.data.frame(table(unique.tweets$source), stringsAsFactors = FALSE)
sources <- sources[order(sources$Platform),]
sources <- sources[order(-sources$Use),]
others.df <- data.frame(sum(sources[sources$Use <= 10,]$Use), "Others")
names(others.df) <- c("Use", "Platform")
sources.collapsed <- rbind(sources[sources$Use >= 10,], others.df)
colnames(sources) <- c("Platform", "Use")
sources <- sources[order(sources$Platform),]
sources <- sources[order(-sources$Use),]
others.df <- data.frame(sum(sources[sources$Use <= 10,]$Use), "Others")
names(others.df) <- c("Use", "Platform")
sources.collapsed <- rbind(sources[sources$Use >= 10,], others.df)
ggplot(sources.collapsed, aes(x = "", y = Freq, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(sources.collapsed, aes(x = "", y = Freq, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(sources.collapsed, aes(x = "", y = Use, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
head(tweets$timestamp_ms, 5)
?strptime
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT")
library(jsonlite)
library(stringr)
library(ggplot2)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
unique.tweets <- tweets[which(tweets$type == "tweet"),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
colnames(sources) <- c("Platform", "Use")
sources <- sources[order(sources$Platform),]
sources <- sources[order(-sources$Use),]
others.df <- data.frame(sum(sources[sources$Use <= 10,]$Use), "Others")
names(others.df) <- c("Use", "Platform")
sources.collapsed <- rbind(sources[sources$Use >= 10,], others.df)
ggplot(sources.collapsed, aes(x = "", y = Use, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Date
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
library(jsonlite)
library(stringr)
library(ggplot2)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
unique.tweets <- tweets[which(tweets$type == "tweet"),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
colnames(sources) <- c("Platform", "Use")
sources <- sources[order(sources$Platform),]
sources <- sources[order(-sources$Use),]
others.df <- data.frame(sum(sources[sources$Use <= 10,]$Use), "Others")
names(others.df) <- c("Use", "Platform")
sources.collapsed <- rbind(sources[sources$Use >= 10,], others.df)
ggplot(sources.collapsed, aes(x = "", y = Use, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Date
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
Sys.localeconv()
Sys.localev()
Sys.locale()
Sys.
Sys.Date
Sys.Date()
Sys.time
Sys.time()
Sys.setlocale("LC_TIME", locale = "C")
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT")
View(datefreq)
head(datefreq)
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    as.Date(., "%Y-%m-%d")
head(datefreq)
?as.Date
as.Date("2017-11-10" , "%Y-%m-%d")
as.Date("2017-11-03" , "%Y-%m-%d")
as.Date("2017-11-03 09:18:57" , " %Y-% m - %d")
Sys.setlocale("LC_TIME", "C")
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT")
Sys.setlocale("LC_TIME", "C")
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT")
head(datefreq)
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
Sys.setlocale("LC_TIME", "C")
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT")
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
Sys.setlocale("LC_TIME", "C")
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT")
head(datefreq)
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
Sys.setlocale("LC_TIME", "C")
datefreq$Date <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format="%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(datefreq$Date, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
library(ggplot2)
??date_format
install.packages("scales")
library(scales)
install.packages("scales")
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
unique.tweets <- tweets[which(tweets$type == "tweet"),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
colnames(sources) <- c("Platform", "Use")
sources <- sources[order(sources$Platform),]
sources <- sources[order(-sources$Use),]
others.df <- data.frame(sum(sources[sources$Use <= 10,]$Use), "Others")
names(others.df) <- c("Use", "Platform")
sources.collapsed <- rbind(sources[sources$Use >= 10,], others.df)
ggplot(sources.collapsed, aes(x = "", y = Use, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Date
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
wd()
getwd
getwd()
setwd("C:\Users\david\Documents\Visual Studio 2017 \Projects\twitterpdf\icanhazpdf")
setwd("C:\\Users\\david\\Documents\\Visual Studio 2017 \\Projects\\twitterpdf\\icanhazpdf")
setwd("C:\\Users\\david\\Documents\\Visual Studio 2017\\Projects\\twitterpdf\\icanhazpdf")
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
unique.tweets <- tweets[which(tweets$type == "tweet"),]
sources <- as.data.frame(table(tweets$source), stringsAsFactors = FALSE)
colnames(sources) <- c("Platform", "Use")
sources <- sources[order(sources$Platform),]
sources <- sources[order(-sources$Use),]
others.df <- data.frame(sum(sources[sources$Use <= 10,]$Use), "Others")
names(others.df) <- c("Use", "Platform")
sources.collapsed <- rbind(sources[sources$Use >= 10,], others.df)
ggplot(sources.collapsed, aes(x = "", y = Use, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Date
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
datefreq <- data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
as.Date(tweets$created_at)
tweets$created_at <- as.Date(tweets$created_at)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
nrow(unique(tweets$user$id_str))
unique(tweets$user$id))
unique(tweets$user$id)
unique(tweets$user$id_str)
length(unique(tweets$user$id_str))
user.posted <- unique(tweets[which(tweets$type == "tweet"),])$user$id_str)
user.posted <- unique(tweets[which(tweets$type == "tweet"),]$user$id_str)
length(user.posted)
user.other <- unique(tweets[which(tweets$type != "tweet"),])$user$id_str)
user.other <- unique(tweets[which(tweets$type != "tweet"),]$user$id_str)
replys <- tweets[which(tweets$type != "tweet")]
replys <- tweets[which(tweets$type != "tweet"),]
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Tweet-Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = tweets-Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(partition, aes(x = "", y = Frequency, fill = TweetsType)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
colnames(partition) <- c("TweetType", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
head(tweets$user$name, 10)
head(tweets$created_at)
tail(Tweets$created_at)
tail(tweets$created_at)
partition <- as.data.frame(table(tweets$user$id_str), stringsAsFactors = FALSE)
ggplot(partition, aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
colnames(partition) <- c("User", "Tweets")
ggplot(partition, aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
partition <- partition[order(-Tweets),]
partition <- partition[order(-partition$Tweets),]
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
head(partition, 10)
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_flip("y", start = 0)
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_flip("y")
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_flip("y")
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_flip()
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(stat = "identity") + coord_flip()
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar() + coord_flip()
ggplot(head(partition, 10), aes(Tweets)) + geom_bar() + coord_flip()
ggplot(head(partition, 10), aes(User)) + geom_bar() + coord_flip()
ggplot(head(partition, 10), aes(x = Tweets, y = User)) + geom_bar() + coord_flip()
ggplot(head(partition, 10), aes(x = Tweets)) + geom_bar() + coord_flip()
tweets <- tweets[which(tweets$user$id_str != "2924860811"),]
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar()
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1) + coord_polar("y", start = 0)
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("") + ggtitle("Distribution of tweet types")
unique.tweets <- tweets[which(tweets$type == "tweet"),]
length(unique.tweets)
nrow(unique.tweets)
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d") %>%
    as.Date(.)
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
datefreq$Date <- as.Date(datefreq$Date)
colnames(datefreq) <- c("Date", "Frequency")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d") %>%
    as.Date(.)
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
datefreq$Date <- as.Date(datefreq$Date)
colnames(datefreq) <- c("Date", "Frequency")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
datefreq$Date <- as.Date(datefreq$Date)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day") + ggtitle("Tweet frequency #ICanHazPdf")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day")
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]
kek2 <- tweets[which(tweets$created_at == "2017-09-20 GMT"),]
length(unique(kek1$user$id_str))
length(unique(kek2$user$id_str))
partition <- as.data.frame(table(kek1$user$id_str), stringsAsFactors = FALSE)
partition <- partition[oder(-Freq)]
partition <- partition[order(-Freq)]
partition <- partition[order(-partition$Freq)]
partition <- partition[order(-partition$Freq),]
sum(partition$Freq)
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
tweets <- tweets[which(tweets$user$id_str != "2924860811"),]
# Date
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d") %>%
    as.Date(.)
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
datefreq$Date <- as.Date(datefreq$Date)
colnames(datefreq) <- c("Date", "Frequency")
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day")
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d") %>%
    as.Date(.)
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
# Plot Type Partition
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Plot User Partition
partition <- as.data.frame(table(tweets$user$id_str), stringsAsFactors = FALSE)
colnames(partition) <- c("User", "Tweets")
partition <- partition[order(-partition$Tweets),]
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Remove @heshecanhazpdf
tweets <- tweets[which(tweets$user$id_str != "2924860811"),]
# Plot Type Partition (again)
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("") + ggtitle("Distribution of tweet types")
unique.tweets <- tweets[which(tweets$type == "tweet"),]
nrow(unique.tweets) # 357
# Date
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d") %>%
    as.Date(.)
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
datefreq$Date <- as.Date(datefreq$Date)
summary(datrfreq)
summary(datefreq)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day")
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]
partition <- as.data.frame(table(kek1$user$id_str), stringsAsFactors = FALSE)
head(partition)
partition <- partition[order(-Freq),]
partition <- partition[order(-partition$Freq),]
head(partition)
length(unique(tweets$user$id_str))
length(unique(tweets[which(tweets$type == "tweet"),]$user$id_str))
length(unique(tweets[which(tweets$type != "tweet"),]$user$id_str))
length(tweets[which(tweets$type == "tweet"),])
nrow(tweets[which(tweets$type == "tweet"),])
length(unique(tweets[which(tweets$type == "tweet"),]$user$id_str)) # 250
nrow(unique(tweets[which(tweets$type == "tweet"),]$user$id_str)) # 250
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]$text
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]$id_str
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]
kek1 <- tweets[,c("text", "id_str")]
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]
rtvs::debug_source("~/Visual Studio 2017/Projects/twitterpdf/icanhazpdf/Script.R")
kek1 <- kek1[,c("text", "id_str")]
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
# Plot Type Partition
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Plot User Partition
partition <- as.data.frame(table(tweets$user$id_str), stringsAsFactors = FALSE)
colnames(partition) <- c("User", "Tweets")
partition <- partition[order(-partition$Tweets),]
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Remove @heshecanhazpdf
tweets <- tweets[which(tweets$user$id_str != "2924860811"),]
# Plot Type Partition (again)
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("") + ggtitle("Distribution of tweet types")
unique.tweets <- tweets[which(tweets$type == "tweet"),]
nrow(unique.tweets) # 357
# Date
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d") %>%
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
kek1 <- tweets[,c("text", "id_str")]
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
# Plot Type Partition
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = TweetType)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Plot User Partition
partition <- as.data.frame(table(tweets$user$id_str), stringsAsFactors = FALSE)
colnames(partition) <- c("User", "Tweets")
partition <- partition[order(-partition$Tweets),]
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Remove @heshecanhazpdf
tweets <- tweets[which(tweets$user$id_str != "2924860811"),]
# Plot Type Partition (again)
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("") + ggtitle("Distribution of tweet types")
unique.tweets <- tweets[which(tweets$type == "tweet"),]
nrow(unique.tweets) # 357
# Date
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d") %>%
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
kek1 <- tweets[,c("text", "id_str")]
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
atefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day")
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day")
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]
kek1 <- kek1[, c("text", "id_str")]
kek1
kek1 <- tweets[which(tweets$created_at == "2017-09-28 GMT"),]
kek1 <- kek1[, c("text", "id_str")]
kek1
kek1["343",]
kek1 <- tweets[which(tweets$created_at == "2017-09-20 GMT"),]
kek1 <- kek1[, c("text", "id_str")]
kek1
kek1[15,]
tweets$user$location
tweets$user$lang
langs <- as.data.frame(table(tweets$user$lang), stringsAsFactors = FALSE)
langs["en","Freq"]
langs[langs$Language == "en","Freq"]
langs[langs$Language == "en",2]
langs["4",2]
langs["4",] <- NULL
langs[] <- langs[-"4",]
langs[] <- langs[-c("4"),]
langs
langs[] <- langs[-4,]
langs[-4,]
langs <- as.data.frame(table(tweets$user$lang), stringsAsFactors = FALSE)
colnames(langs) <- c("Language", "Freq")
# Merge en and en-gb
langs[3, 2] <- langs[3, 2] + langs[4, 2] + langs[5,2]
langs <- langs[-c(4, 5),]
otherlangs <- data.frame(sum[langs[langs$Freq < 30]]$Freq, "Others")
names(otherlangs) <- c("Langauge", "Freq")
langs <- rbind(langs[langs$Freq >= 30,], otherlangs)
ggplot(sources.collapsed, aes(x = "", y = Use, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(langs, aes(x = "", y = Freq, fill = Platform)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
ggplot(langs, aes(x = "", y = Freq, fill = Language)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
otherlangs <- data.frame(sum[langs[langs$Freq < 30]]$Freq, "Others")
otherlangs <- data.frame(sum[langs[langs$Freq < 30,]]$Freq, "Others")
otherlangs <- data.frame(sum(langs[langs$Freq < 30,])$Freq, "Others")
langs[langs$Freq < 30,])$Freq
langs$Freq < 30,]
otherlangs <- data.frame(sum(langs[langs$Freq < 30,]$Freq), "Others")
names(otherlangs) <- c("Langauge", "Freq")
langs <- rbind(langs[langs$Freq >= 30,], otherlangs)
names(otherlangs) <- c("Language", "Freq")
langs <- rbind(langs[langs$Freq >= 30,], otherlangs)
ggplot(langs, aes(x = "", y = Freq, fill = Language)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
names(otherlangs) <- c("Freq", "Language")
langs <- rbind(langs[langs$Freq >= 30,], otherlangs)
langs <- as.data.frame(table(tweets$user$lang), stringsAsFactors = FALSE)
colnames(langs) <- c("Language", "Freq")
# Merge en and en-gb
langs[3, 2] <- langs[3, 2] + langs[4, 2] + langs[5,2]
langs <- langs[-c(4, 5),]
otherlangs <- data.frame(sum(langs[langs$Freq < 30,]$Freq), "Others")
names(otherlangs) <- c("Freq", "Language")
langs <- rbind(langs[langs$Freq >= 30,], otherlangs)
ggplot(langs, aes(x = "", y = Freq, fill = Language)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
tweets$place$country
tweets$place$country[!(is.na(tweets$place$country))]
length(nrow(tweets$place$country[!(is.na(tweets$place$country))]))
length(tweets$place$country[!(is.na(tweets$place$country))]))
length(tweets$place$country[!(is.na(tweets$place$country))])))
length(tweets$place$country[!(is.na(tweets$place$country))])
nrow(unique(tweets$user)$location)
kek <- unique(tweets$user)
length(tweets$user$location[!(is.na(tweets$user$location))])
ggplot(langs, aes(x = "", y = Freq, fill = Language)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("")
# Lang distribution
langs <- as.data.frame(table(tweets$user$lang), stringsAsFactors = FALSE)
colnames(langs) <- c("Language", "Freq")
# Merge en and en-gb
langs[3, 2] <- langs[3, 2] + langs[4, 2] + langs[5,2]
langs <- langs[-c(4, 5),]
otherlangs <- data.frame(sum(langs[langs$Freq < 30,]$Freq), "others")
names(otherlangs) <- c("Freq", "Language")
langs <- rbind(langs[langs$Freq >= 30,], otherlangs)
ggplot(langs, aes(x = "", y = Freq, fill = Language)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("")
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
tweets <- subset(tweets, user$id_str != "867090278104039426")
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
partition <- as.data.frame(table(tweets$user$id_str), stringsAsFactors = FALSE)
colnames(partition) <- c("User", "Tweets")
partition <- partition[order(-partition$Tweets),]
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
tweets <- tweets[which(tweets$user$id_str != "2924860811"),]
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("") + ggtitle("Distribution of tweet types")
unique.tweets <- tweets[which(tweets$type == "tweet"),]
nrow(unique.tweets) # 357
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day")
library(jsonlite)
library(stringr)
library(ggplot2)
library(scales)
# Windows loves Unicode. Not.
options(encoding = "UTF-8")
tweets <- stream_in(file("stream_icanhazpdf.json", open = "r"))
# Filter out tweets by me
tweets <- subset(tweets, user$id_str != "867090278104039426")
# geo is deprecated
# extended_entities only contains media attributes
# favorite_count is zero anyway
# retweet_count too as is reply_count
drop <- c("geo", "possibly_sensitive", "filter_level", "retweeted", "favorited", "extended_entities",
          "favorite_count", "retweet_count", "reply_count", "quote_count", "quoted_status", "quoted_status_id",
          "coordinates", "in_reply_to_id", "in_reply_to_screen_name", "in_reply_to_user_id", "in_reply_to_status_id", "truncated", "id")
tweets <- tweets[, !(names(tweets) %in% drop)]
tweets$source <- str_extract(tweets$source, ">(.*?)</a>$") %>%
    gsub("</a>", "", .) %>%
    gsub(">", "", .)
tweets <- within(tweets, {
                 type <- ifelse(!(is.na(retweeted_status$id)), "retweet",
                                ifelse(is_quote_status, "quote",
                                ifelse(!(is.na(in_reply_to_status_id_str)), "reply", "tweet")))
})
# Plot Type Partition
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Plot User Partition
partition <- as.data.frame(table(tweets$user$id_str), stringsAsFactors = FALSE)
colnames(partition) <- c("User", "Tweets")
partition <- partition[order(-partition$Tweets),]
ggplot(head(partition, 10), aes(x = "", y = Tweets, fill = User)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0)
# Remove @heshecanhazpdf
tweets <- tweets[which(tweets$user$id_str != "2924860811"),]
# Plot Type Partition (again)
partition <- as.data.frame(table(tweets$type), stringsAsFactors = FALSE)
colnames(partition) <- c("Type", "Frequency")
ggplot(partition, aes(x = "", y = Frequency, fill = Type)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start = 0) + ylab("") + xlab("") + ggtitle("Distribution of tweet types")
unique.tweets <- tweets[which(tweets$type == "tweet"),]
nrow(unique.tweets) # 357
# Date
Sys.setlocale("LC_TIME", "C")
tweets$created_at <- strptime(tweets$created_at, "%a %b %d %H:%M:%S %z %Y", tz = "GMT") %>%
    format(as.POSIXct(., format = "%Y-%m-%d %H:%M:%S"), format = "%Y-%m-%d")
datefreq <- as.data.frame(table(tweets$created_at), stringsAsFactors = FALSE)
colnames(datefreq) <- c("Date", "Frequency")
datefreq$Date <- as.Date(datefreq$Date)
ggplot(datefreq, aes(Date, Frequency)) + geom_line() + scale_x_date(labels = date_format("%m-%d")) + xlab("Date") + ylab("Tweets per day")
# Stats
length(unique(tweets$user$id_str)) #482
length(unique(tweets[which(tweets$type == "tweet"),]$user$id_str)) # 250
length(unique(tweets[which(tweets$type != "tweet"),]$user$id_str)) # 263
nrow(tweets[which(tweets$type == "tweet"),]) # 357 so 304 not 'originall'
loc <- tweets$user$location
grep("leipzig", loc)
grep("leipzig", loc, fixed = TRUE)
loc
grep("leipzig", loc, value = TRUE)
loc[which(!(is.na(loc)))]
loc <- loc[which(!(is.na(loc)))]
loc <- unique(loc)
